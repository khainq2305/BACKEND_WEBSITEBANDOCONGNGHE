import clip
import torch
from PIL import Image
import requests
import mysql.connector
import io

# ‚úÖ K·∫øt n·ªëi CSDL MySQL
db = mysql.connector.connect(
    host="localhost",
    user="root",
    password="mysql",
    database="duantotnghiep"
)
cursor = db.cursor(dictionary=True)

# ‚úÖ T·∫£i model CLIP
device = "cuda" if torch.cuda.is_available() else "cpu"
model, preprocess = clip.load("ViT-B/14", device=device)

# ‚úÖ L·∫•y s·∫£n ph·∫©m ch∆∞a c√≥ vector
cursor.execute("SELECT id, thumbnail FROM products WHERE imageVector IS NULL")
products = cursor.fetchall()

print(f"üñºÔ∏è C√≥ {len(products)} s·∫£n ph·∫©m c·∫ßn x·ª≠ l√Ω")

for p in products:
    try:
        print(f"üëâ X·ª≠ l√Ω ID {p['id']}")

        # T·∫£i ·∫£nh
        response = requests.get(p['thumbnail'])
        image = Image.open(io.BytesIO(response.content)).convert("RGB")
        image_input = preprocess(image).unsqueeze(0).to(device)

        # T·∫°o vector
        with torch.no_grad():
            embedding = model.encode_image(image_input).cpu().numpy().tolist()[0]

        # Chuy·ªÉn v·ªÅ JSON string ƒë·ªÉ l∆∞u v√†o MySQL
        import json
        vector_str = json.dumps(embedding)

        # C·∫≠p nh·∫≠t DB
        cursor.execute(
            "UPDATE products SET imageVector = %s WHERE id = %s",
            (vector_str, p['id'])
        )
        db.commit()
        print(f"‚úÖ ƒê√£ l∆∞u vector cho ID {p['id']}")

    except Exception as e:
        print(f"‚ùå L·ªói v·ªõi ID {p['id']}: {e}")

cursor.close()
db.close()
print("üéâ Xong t·∫•t c·∫£.")
